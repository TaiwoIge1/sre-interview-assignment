name: CI

on:
  push:
    branches: ["*"] # run on all branches
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: swapi
          POSTGRES_PASSWORD: password
          POSTGRES_DB: swapi
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: tester
          load: true
          tags: test-image:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests
        run: docker run --rm \
          --network host \
          -e DATABASE_URL=postgres://swapi:password@localhost:5432/swapi \
          -v $PWD:/app \
          -w /app \
          test-image:latest

      - name: Upload test results (JUnit)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: ./test-results/junit.xml

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref_type == 'branch'
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push production image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: production
          tags: ttl.sh/${{ github.repository }}:${{ github.sha }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
