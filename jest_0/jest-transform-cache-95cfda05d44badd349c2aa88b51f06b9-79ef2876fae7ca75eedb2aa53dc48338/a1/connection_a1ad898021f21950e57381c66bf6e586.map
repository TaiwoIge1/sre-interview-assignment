{"file":"/tmp/src/db/connection.ts","mappings":";;;AAAA,2BAA0B;AAE1B,mCAAmC;AACnC,IAAI,IAAI,GAAgB,IAAI,CAAC;AAEtB,MAAM,aAAa,GAAG,GAAS,EAAE;IACtC,IAAI,CAAC,IAAI,EAAE,CAAC;QACV,IAAI,GAAG,IAAI,SAAI,CAAC;YACd,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;SAC3C,CAAC,CAAC;QAEH,wBAAwB;QACxB,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;YACvB,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,GAAG,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAbW,QAAA,aAAa,iBAaxB;AAEK,MAAM,eAAe,GAAG,KAAK,IAAmB,EAAE;IACvD,IAAI,IAAI,EAAE,CAAC;QACT,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC;QACjB,IAAI,GAAG,IAAI,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AALW,QAAA,eAAe,mBAK1B;AAEF,iCAAiC;AAC1B,MAAM,YAAY,GAAG,KAAK,IAAmB,EAAE;IACpD,MAAM,MAAM,GAAG,MAAM,IAAA,qBAAa,GAAE,CAAC,OAAO,EAAE,CAAC;IAE/C,IAAI,CAAC;QACH,qDAAqD;QACrD,MAAM,MAAM,CAAC,KAAK,CAAC;;;;;;KAMlB,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAC7C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;QAC5D,MAAM,KAAK,CAAC;IACd,CAAC;YAAS,CAAC;QACT,MAAM,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;AACH,CAAC,CAAC;AApBW,QAAA,YAAY,gBAoBvB","names":[],"sources":["/tmp/src/db/connection.ts"],"sourcesContent":["import { Pool } from 'pg';\n\n// Create a singleton pool instance\nlet pool: Pool | null = null;\n\nexport const getConnection = (): Pool => {\n  if (!pool) {\n    pool = new Pool({\n      connectionString: process.env.DATABASE_URL,\n    });\n\n    // Log connection errors\n    pool.on('error', (err) => {\n      console.error('Unexpected error on idle client', err);\n    });\n  }\n\n  return pool;\n};\n\nexport const closeConnection = async (): Promise<void> => {\n  if (pool) {\n    await pool.end();\n    pool = null;\n  }\n};\n\n// Initialize the database schema\nexport const initDatabase = async (): Promise<void> => {\n  const client = await getConnection().connect();\n\n  try {\n    // Create the planet_status table if it doesn't exist\n    await client.query(`\n      CREATE TABLE IF NOT EXISTS planet_status (\n        planet_id VARCHAR(50) PRIMARY KEY,\n        destroyed BOOLEAN NOT NULL DEFAULT FALSE,\n        updated_at TIMESTAMP NOT NULL DEFAULT NOW()\n      );\n    `);\n\n    console.log('Database schema initialized');\n  } catch (error) {\n    console.error('Error initializing database schema:', error);\n    throw error;\n  } finally {\n    client.release();\n  }\n};"],"version":3}