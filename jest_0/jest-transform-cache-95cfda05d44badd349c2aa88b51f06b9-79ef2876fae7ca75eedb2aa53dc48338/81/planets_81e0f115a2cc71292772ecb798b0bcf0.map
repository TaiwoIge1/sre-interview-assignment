{"file":"/tmp/src/api/routes/planets.ts","mappings":";;AACA,gEAA4D;AAC5D,kEAA8D;AAC9D,4EAAwE;AACxE,mDAAkD;AAElD,MAAM,YAAY,GAAuB,KAAK,EAAE,OAAwB,EAAE,EAAE;IAC1E,MAAM,YAAY,GAAG,IAAI,4BAAY,EAAE,CAAC;IACxC,MAAM,gBAAgB,GAAG,IAAI,oCAAgB,EAAE,CAAC;IAChD,MAAM,aAAa,GAAG,IAAI,8BAAa,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;IAExE,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;QAC/D,MAAM,MAAM,GAAG,OAAO,CAAC,MAAwB,CAAC;QAChD,MAAM,IAAI,GAAG,OAAO,CAAC,IAA+B,CAAC;QAErD,MAAM,EAAE,GAAG,IAAA,qBAAU,EAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACjC,IAAI,CAAC,EAAE,EAAE,CAAC;YACR,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAChB,OAAO,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;QACxC,CAAC;QAED,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE,CAAC;YACxC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAChB,OAAO,EAAE,KAAK,EAAE,+CAA+C,EAAE,CAAC;QACpE,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,6BAA6B,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACrF,OAAO,EAAE,MAAM,EAAE,CAAC;IACpB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,kBAAe,YAAY,CAAC","names":[],"sources":["/tmp/src/api/routes/planets.ts"],"sourcesContent":["import { FastifyInstance, FastifyPluginAsync } from 'fastify';\nimport { SwapiAdapter } from '../../adapters/swapi.adapter';\nimport { PlanetService } from '../../services/planet.service';\nimport { PlanetRepository } from '../../repositories/planet.repository';\nimport { sanitizeId } from '../../utils/sanitize';\n\nconst planetRoutes: FastifyPluginAsync = async (fastify: FastifyInstance) => {\n  const swapiAdapter = new SwapiAdapter();\n  const planetRepository = new PlanetRepository();\n  const planetService = new PlanetService(swapiAdapter, planetRepository);\n\n  fastify.put('/planets/:id/destruction', async (request, reply) => {\n    const params = request.params as { id: string };\n    const body = request.body as { destroyed?: boolean };\n\n    const id = sanitizeId(params.id);\n    if (!id) {\n      reply.code(400);\n      return { error: 'Invalid planet ID' };\n    }\n\n    if (typeof body.destroyed !== 'boolean') {\n      reply.code(400);\n      return { error: 'The \"destroyed\" field must be a boolean value' };\n    }\n\n    const planet = await planetService.upsertPlanetDestructionStatus(id, body.destroyed);\n    return { planet };\n  });\n};\n\nexport default planetRoutes;"],"version":3}