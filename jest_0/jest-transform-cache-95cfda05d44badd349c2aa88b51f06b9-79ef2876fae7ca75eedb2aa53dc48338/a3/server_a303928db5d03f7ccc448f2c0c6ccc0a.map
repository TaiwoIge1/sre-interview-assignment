{"file":"/tmp/src/server.ts","mappings":";;;;;;AAAA,oDAA4B;AAC5B,qCAA8D;AAE9D,gDAAwB;AACxB,gDAAgE;AAEhE,MAAM,SAAS,GAAW,gBAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACvD,MAAM,IAAI,GAAW,gBAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAEtC,MAAM,KAAK,GAAG,GAAG,EAAE;IACxB,sBAAsB;IACtB,MAAM,MAAM,GAAoB,IAAA,iBAAO,EAAC;QACtC,GAAG,EAAE;YACH,aAAa,EAAE;gBACb,MAAM,EAAE,KAAK;aACd;SACF;QACD,MAAM,EAAE,IAAI;KACb,CAAC,CAAC;IAEH,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACnC,2DAA2D;QAC3D,MAAM,IAAA,4BAAe,GAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,uCAAuC;IACvC,MAAM,CAAC,QAAQ,CAAC,IAAA,aAAG,GAAE,CAAC,CAAC;IAEvB,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AApBW,QAAA,KAAK,SAoBhB;AAEK,MAAM,KAAK,GAAG,KAAK,EAAE,MAAuB,EAA4B,EAAE;IAC/E,IAAI,CAAC;QACH,0BAA0B;QAC1B,MAAM,IAAA,yBAAY,GAAE,CAAC;QAErB,MAAM,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;IACvD,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,IAAI,GAAG,EAAE,CAAC;YACR,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,sBAAsB,CAAC,CAAC;YAClD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;IACH,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAdW,QAAA,KAAK,SAchB;AAEF,kBAAe,GAA6B,EAAE;IAC5C,OAAO,IAAA,aAAK,EAAC,IAAA,aAAK,GAAE,CAAC,CAAC;AACxB,CAAC,CAAC","names":[],"sources":["/tmp/src/server.ts"],"sourcesContent":["import config from 'config';\nimport { fastify as Fastify, FastifyInstance } from 'fastify';\n\nimport api from './api';\nimport { initDatabase, closeConnection } from './db/connection';\n\nconst INTERFACE: string = config.get('http.interface');\nconst PORT: number = config.get('http.port');\n\nexport const build = () => {\n  // Instantiate Fastify\n  const server: FastifyInstance = Fastify({\n    ajv: {\n      customOptions: {\n        strict: false,\n      },\n    },\n    logger: true\n  });\n\n  server.addHook('onClose', async () => {\n    // Close the database connection when the server shuts down\n    await closeConnection();\n  });\n\n  // Register the API scaffolding plugin.\n  server.register(api());\n\n  return server;\n};\n\nexport const start = async (server: FastifyInstance): Promise<FastifyInstance> => {\n  try {\n    // Initialize the database\n    await initDatabase();\n\n    await server.listen({ port: PORT, host: INTERFACE });\n  } catch (err) {\n    if (err) {\n      server.log.error({ err }, 'Server startup error');\n      process.exit(1);\n    }\n  }\n\n  return server;\n};\n\nexport default (): Promise<FastifyInstance> => {\n  return start(build());\n};\n"],"version":3}