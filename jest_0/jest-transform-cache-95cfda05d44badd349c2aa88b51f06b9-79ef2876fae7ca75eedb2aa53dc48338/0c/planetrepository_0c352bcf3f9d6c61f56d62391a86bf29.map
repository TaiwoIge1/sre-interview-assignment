{"file":"/tmp/src/repositories/planet.repository.ts","mappings":";;;AAAA,iDAAiD;AAEjD,MAAa,gBAAgB;IAE3B,KAAK,CAAC,0BAA0B,CAAC,QAAgB;QAC/C,MAAM,MAAM,GAAG,MAAM,IAAA,0BAAa,GAAE,CAAC,OAAO,EAAE,CAAC;QAE/C,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,KAAK,CAC/B,0DAA0D,EAC1D,CAAC,QAAQ,CAAC,CACX,CAAC;YAEF,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;QAClE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,+CAA+C,QAAQ,GAAG,EAAE,KAAK,CAAC,CAAC;YACjF,MAAM,KAAK,CAAC;QACd,CAAC;gBAAS,CAAC;YACT,MAAM,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,6BAA6B,CAAC,QAAgB,EAAE,SAAkB;QACtE,MAAM,MAAM,GAAG,MAAM,IAAA,0BAAa,GAAE,CAAC,OAAO,EAAE,CAAC;QAE/C,IAAI,CAAC;YACH,MAAM,MAAM,CAAC,KAAK,CAChB;;;0DAGkD,EAClD,CAAC,QAAQ,EAAE,SAAS,CAAC,CACtB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,gDAAgD,QAAQ,GAAG,EAAE,KAAK,CAAC,CAAC;YAClF,MAAM,KAAK,CAAC;QACd,CAAC;gBAAS,CAAC;YACT,MAAM,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC;IACH,CAAC;CACF;AAtCD,4CAsCC","names":[],"sources":["/tmp/src/repositories/planet.repository.ts"],"sourcesContent":["import { getConnection } from '../db/connection';\n\nexport class PlanetRepository {\n\n  async getPlanetDestructionStatus(planetId: string): Promise<boolean | null> {\n    const client = await getConnection().connect();\n\n    try {\n      const result = await client.query(\n        'SELECT destroyed FROM planet_status WHERE planet_id = $1',\n        [planetId]\n      );\n\n      return result.rows.length > 0 ? result.rows[0].destroyed : null;\n    } catch (error) {\n      console.error(`Error getting destruction status for planet ${planetId}:`, error);\n      throw error;\n    } finally {\n      client.release();\n    }\n  }\n\n  async upsertPlanetDestructionStatus(planetId: string, destroyed: boolean): Promise<void> {\n    const client = await getConnection().connect();\n\n    try {\n      await client.query(\n        `INSERT INTO planet_status (planet_id, destroyed, updated_at)\n         VALUES ($1, $2, NOW())\n         ON CONFLICT (planet_id)\n         DO UPDATE SET destroyed = $2, updated_at = NOW()`,\n        [planetId, destroyed]\n      );\n    } catch (error) {\n      console.error(`Error updating destruction status for planet ${planetId}:`, error);\n      throw error;\n    } finally {\n      client.release();\n    }\n  }\n}"],"version":3}